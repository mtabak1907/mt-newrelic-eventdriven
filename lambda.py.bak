import boto3
import json
import os

def assume_role(role_arn):
    sts_client = boto3.client('sts')
    assumed_role = sts_client.assume_role(
        RoleArn=role_arn,
        RoleSessionName="LambdaEC2Session"
    )
    credentials = assumed_role['Credentials']
    return boto3.client(
        'ssm',
        aws_access_key_id=credentials['AccessKeyId'],
        aws_secret_access_key=credentials['SecretAccessKey'],
        aws_session_token=credentials['SessionToken']
    )

def lambda_handler(event, context):
    instance_id = ["i-0cca2e61e3dac33fb","i-0971f52241345333b"]  # Replace with your EC2 instance ID
    role_arn = "arn:aws:iam::548054344313:role/mt-restart-vm-role-owjfzrs8"

    ssm_client = assume_role(role_arn)

    try:
        response = ssm_client.send_command(
            InstanceIds=[instance_id],
            DocumentName="AWS-RunPowerShellScript",
            Parameters={"commands": ["powershell.exe -File C:\\mt\\restart.ps1"]}
        )
        return {
            'statusCode': 200,
            'body': json.dumps(f'Successfully sent restart command to {instance_id}')
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'body': json.dumps(f'Error: {str(e)}')
        }

