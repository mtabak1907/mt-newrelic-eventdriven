provider "aws" {
  region = "eu-west-2"  # London region
}


# IAM Role for Lambda
resource "aws_iam_role" "mt_2025v2" {
  name               = "mt-2025v2"
  description        = "Copy of mt-2025v2 role"
  max_session_duration = 3600

  assume_role_policy = <<EOF
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Principal": {
          "Service": [
            "lambda.amazonaws.com",
            "ec2.amazonaws.com"
          ]
        },
        "Action": "sts:AssumeRole"
      }
    ]
  }
  EOF
}

resource "aws_iam_role_policy_attachment" "ssm_full_access" {
  role       = aws_iam_role.mt_2025v2.name
  policy_arn = "arn:aws:iam::aws:policy/AmazonSSMFullAccess"
}

resource "aws_iam_role_policy_attachment" "ssm_managed_instance_core" {
  role       = aws_iam_role.mt_2025v2.name
  policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
}

#  Create IAM Instance Profile
resource "aws_iam_instance_profile" "mt_2025v2_profile" {
  name = "mt-2025v2"
  role = aws_iam_role.mt_2025v2.name
}



# API Gateway
resource "aws_apigatewayv2_api" "mt_relogin_vm_api" {
  name          = "mt-relogin-vmv2"
  protocol_type = "HTTP"
}

# Lambda Function for Restarting the VM via SSM
resource "aws_lambda_function" "mt_relogin_vm_lambda" {
  function_name    = "mt-relogin-vm-lambdav2"
  runtime         = "python3.9"
  handler         = "lambda.lambda_handler"
  role           = "arn:aws:iam::548054344313:role/mt-2025v2"  # Use your existing IAM Role ARN
  filename       = "lambda.zip"

  source_code_hash = filebase64sha256("lambda.zip")

  environment {
    variables = {
      INSTANCE_IDS = "i-0cca2e61e3dac33fb,i-0971f52241345333b"  # Ensure this is your correct EC2 Instance ID
    }
  }
}

# API Gateway Integration with Lambda
resource "aws_apigatewayv2_integration" "lambda_integration" {
  api_id           = aws_apigatewayv2_api.mt_relogin_vm_api.id
  integration_type = "AWS_PROXY"
  integration_uri  = aws_lambda_function.mt_relogin_vm_lambda.invoke_arn
}

#  Route with Lambda Integration Target
resource "aws_apigatewayv2_route" "relogin_route" {
  api_id    = aws_apigatewayv2_api.mt_relogin_vm_api.id
  route_key = "POST /relogin"
  target    = "integrations/${aws_apigatewayv2_integration.lambda_integration.id}"  
}

# API Gateway Stage Deployment
resource "aws_apigatewayv2_stage" "mt_relogin_vm_stage" {
  api_id      = aws_apigatewayv2_api.mt_relogin_vm_api.id
  name        = "prod"
  auto_deploy = true
}

# Lambda Permission for API Gateway Invocation
resource "aws_lambda_permission" "apigateway_invoke" {
  statement_id  = "AllowAPIGatewayInvoke"
  action        = "lambda:InvokeFunction"
  function_name = aws_lambda_function.mt_relogin_vm_lambda.function_name
  principal     = "apigateway.amazonaws.com"

  source_arn = "${aws_apigatewayv2_api.mt_relogin_vm_api.execution_arn}/*/*"
}

# Output API URL
output "api_url" {
  value = "${aws_apigatewayv2_stage.mt_relogin_vm_stage.invoke_url}/relogin"
}
